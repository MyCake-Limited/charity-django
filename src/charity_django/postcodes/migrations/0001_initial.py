# Generated by Django 4.2.2 on 2023-10-24 00:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GeoCode",
            fields=[
                (
                    "GEOGCD",
                    models.CharField(
                        max_length=9,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Area code",
                    ),
                ),
                (
                    "GEOGNM",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="Area name",
                    ),
                ),
                (
                    "GEOGNMW",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Area name (Welsh)",
                    ),
                ),
                (
                    "SI_ID",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="Statutory Instrument ID",
                    ),
                ),
                (
                    "SI_TITLE",
                    models.TextField(
                        blank=True, null=True, verbose_name="Statutory Instrument title"
                    ),
                ),
                (
                    "OPER_DATE",
                    models.DateField(
                        blank=True, null=True, verbose_name="Operational date"
                    ),
                ),
                (
                    "TERM_DATE",
                    models.DateField(
                        blank=True, null=True, verbose_name="Termination date"
                    ),
                ),
                (
                    "PARENTCD",
                    models.CharField(
                        blank=True, max_length=9, null=True, verbose_name="Parent code"
                    ),
                ),
                (
                    "OWNER",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Owner"
                    ),
                ),
                (
                    "STATUS",
                    models.CharField(
                        blank=True,
                        choices=[("live", "Live"), ("terminated", "Terminated")],
                        max_length=255,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "AREAEHECT",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="'Extent of the Realm' measurement, in hectares",
                    ),
                ),
                (
                    "AREACHECT",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Area to Mean High Water, in hectares",
                    ),
                ),
                (
                    "AREAIHECT",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Area of inland water, in hectares",
                    ),
                ),
                (
                    "AREALHECT",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Area to Mean High Water excluding area of inland water (land area), in hectares",
                    ),
                ),
            ],
            options={
                "verbose_name": "Area",
                "verbose_name_plural": "Areas",
            },
        ),
        migrations.CreateModel(
            name="GeoEntityGroup",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=32,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Entity group code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Entity group name",
                    ),
                ),
            ],
            options={
                "verbose_name": "Area type group",
                "verbose_name_plural": "Area type groups",
            },
        ),
        migrations.CreateModel(
            name="Postcode",
            fields=[
                (
                    "PCD",
                    models.CharField(
                        help_text="Unit postcode – 7 character version",
                        max_length=7,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Postcode",
                    ),
                ),
                (
                    "PCD2",
                    models.CharField(
                        blank=True,
                        help_text="Unit postcode – 8 character version",
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "PCDS",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="8 Unit postcode - variable length (e-Gif) version",
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "DOINTR",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        null=True,
                        verbose_name="Date of introduction",
                    ),
                ),
                (
                    "DOTERM",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        null=True,
                        verbose_name="Date of termination",
                    ),
                ),
                (
                    "USERTYPE",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Small User"), (1, "Large User")],
                        null=True,
                        verbose_name="User type",
                    ),
                ),
                (
                    "OSEAST1M",
                    models.IntegerField(
                        blank=True,
                        help_text="National grid reference - Easting",
                        null=True,
                        verbose_name="Easting",
                    ),
                ),
                (
                    "OSNRTH1M",
                    models.IntegerField(
                        blank=True,
                        help_text="National grid reference - Northing",
                        null=True,
                        verbose_name="Northing",
                    ),
                ),
                (
                    "OSGRDIND",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Within Building"),
                            (2, "Within Building Visual"),
                            (3, "Approximate"),
                            (4, "Postcode Unit Mean"),
                            (5, "Imputed"),
                            (6, "Postcode Sector Mean"),
                            (8, "Terminated"),
                            (9, "None Available"),
                        ],
                        help_text="Grid reference positional quality indicator",
                        null=True,
                        verbose_name="Positional quality",
                    ),
                ),
                (
                    "RU11IND",
                    models.CharField(
                        blank=True,
                        max_length=2,
                        null=True,
                        verbose_name="2011 Census rural-urban classification",
                    ),
                ),
                (
                    "OAC11",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="2011 Census Output Area classification (OAC)",
                    ),
                ),
                (
                    "LAT",
                    models.FloatField(blank=True, null=True, verbose_name="Latitude"),
                ),
                (
                    "LONG",
                    models.FloatField(blank=True, null=True, verbose_name="Longitude"),
                ),
                (
                    "IMD",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Index of Multiple Deprivation (IMD)",
                    ),
                ),
                (
                    "builtup_area_2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="BUA11",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="bua11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Built-up Area (BUA)",
                    ),
                ),
                (
                    "builtup_area_subdivision_2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="BUASD11",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="buasd11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Built-up Area Sub-division (BUASD)",
                    ),
                ),
                (
                    "cancer_alliance",
                    models.ForeignKey(
                        blank=True,
                        db_column="CALNCV",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="calncv_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Cancer Alliance (CAL)",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_column="CTRY",
                        db_constraint=False,
                        limit_choices_to={
                            "ENTITYCD__code__in": ["E92", "N92", "S92", "W92"]
                        },
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ctry_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "county",
                    models.ForeignKey(
                        blank=True,
                        db_column="CTY",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="cty_postcodes",
                        to="postcodes.geocode",
                        verbose_name="County",
                    ),
                ),
                (
                    "county_electoral_division",
                    models.ForeignKey(
                        blank=True,
                        db_column="CED",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ced_postcodes",
                        to="postcodes.geocode",
                        verbose_name="County Electoral Division",
                    ),
                ),
                (
                    "european_electoral_region",
                    models.ForeignKey(
                        blank=True,
                        db_column="EER",
                        db_constraint=False,
                        help_text="European Electoral Region (EER)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="eer_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "health_authority",
                    models.ForeignKey(
                        blank=True,
                        db_column="HLTHAU",
                        db_constraint=False,
                        help_text="Former Strategic Health Authority (SHA)/ Local Health Board (LHB)/ Health Board (HB)/ Health Authority (HA)/ Health & Social Care Board (HSCB)",
                        limit_choices_to={"ENTITYCD__code__in": ["E18"]},
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="hlthau_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "integrated_care_board",
                    models.ForeignKey(
                        blank=True,
                        db_column="ICB",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="icb_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Integrated Care Board (ICB)",
                    ),
                ),
                (
                    "international_territorial_level",
                    models.ForeignKey(
                        blank=True,
                        db_column="ITL",
                        db_constraint=False,
                        help_text="International Territorial Level (former NUTS)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="itl_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "local_authority",
                    models.ForeignKey(
                        blank=True,
                        db_column="LAUA",
                        db_constraint=False,
                        help_text="Local Authority District (LAD) - unitary authority (UA)/non-metropolitan district (NMD)/ metropolitan district (MD)/ London borough (LB)/ council area (CA)/district council area (DCA)",
                        limit_choices_to={
                            "ENTITYCD__code__in": [
                                "E06",
                                "E07",
                                "E08",
                                "E09",
                                "N09",
                                "S12",
                                "W06",
                            ]
                        },
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="laua_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Local Authority",
                    ),
                ),
                (
                    "local_enterprise_partnership_1",
                    models.ForeignKey(
                        blank=True,
                        db_column="LEP1",
                        db_constraint=False,
                        help_text="Local Enterprise Partnership (LEP) - first instance",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lep1_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "local_enterprise_partnership_2",
                    models.ForeignKey(
                        blank=True,
                        db_column="LEP2",
                        db_constraint=False,
                        help_text="Local Enterprise Partnership (LEP) - second instance",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lep2_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "lsoa2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="LSOA11",
                        db_constraint=False,
                        help_text="2011 Census Lower Layer Super Output Area (LSOA)/ Data Zone (DZ)/ SOA",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lsoa11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="LSOA 2011",
                    ),
                ),
                (
                    "lsoa2021",
                    models.ForeignKey(
                        blank=True,
                        db_column="LSOA21",
                        db_constraint=False,
                        help_text="2021 Census Lower Layer Super Output Area (LSOA)/ Data Zone (DZ)/ SOA",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lsoa21_postcodes",
                        to="postcodes.geocode",
                        verbose_name="LSOA 2021",
                    ),
                ),
                (
                    "msoa2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="MSOA11",
                        db_constraint=False,
                        help_text="2011 Census Middle Layer Super Output Area (MSOA)/ Intermediate Zone (IZ)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="msoa11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="MSOA 2011",
                    ),
                ),
                (
                    "msoa2021",
                    models.ForeignKey(
                        blank=True,
                        db_column="MSOA21",
                        db_constraint=False,
                        help_text="2021 Census Middle Layer Super Output Area (MSOA)/ Intermediate Zone (IZ)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="msoa21_postcodes",
                        to="postcodes.geocode",
                        verbose_name="LSOA 2021",
                    ),
                ),
                (
                    "national_park",
                    models.ForeignKey(
                        blank=True,
                        db_column="PARK",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="park_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "nhs_england_region",
                    models.ForeignKey(
                        blank=True,
                        db_column="NHSER",
                        db_constraint=False,
                        help_text="NHS England (Region) (NHS ER)",
                        limit_choices_to={"ENTITYCD__code__in": ["E40"]},
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="nhser_postcodes",
                        to="postcodes.geocode",
                        verbose_name="NHS England Region",
                    ),
                ),
                (
                    "output_area_2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="OA11",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="oa11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Output Area 2011",
                    ),
                ),
                (
                    "output_area_2021",
                    models.ForeignKey(
                        blank=True,
                        db_column="OA21",
                        db_constraint=False,
                        help_text="2021 Census Output Area (OA)/ Small Area (SA)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="oa21_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Output Area 2021",
                    ),
                ),
                (
                    "parlimentary_constitutency",
                    models.ForeignKey(
                        blank=True,
                        db_column="PCON",
                        db_constraint=False,
                        help_text="Westminster parliamentary constituency",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="pcon_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "police_force_area",
                    models.ForeignKey(
                        blank=True,
                        db_column="PFA",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="pfa_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Police Force Area (PFA)",
                    ),
                ),
                (
                    "primary_care_trust",
                    models.ForeignKey(
                        blank=True,
                        db_column="PCT",
                        db_constraint=False,
                        help_text="Primary Care Trust (PCT)/ Care Trust/ Care Trust Plus (CT)/ Local Health Board (LHB)/ Community Health Partnership (CHP)/ Local Commissioning Group (LCG)/ Primary Healthcare Directorate (PHD)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="pct_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        db_column="RGN",
                        db_constraint=False,
                        help_text="Region (former GOR)",
                        limit_choices_to={"ENTITYCD__code__in": ["E12"]},
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="rgn_postcodes",
                        to="postcodes.geocode",
                    ),
                ),
                (
                    "sub_icb_location",
                    models.ForeignKey(
                        blank=True,
                        db_column="SICBL",
                        db_constraint=False,
                        help_text="Sub ICB Location (SICBL)/ Local Health Board (LHB)/ Community Health Partnership (CHP)/ Local Commissioning Group (LCG)/ Primary Healthcare Directorate (PHD)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="sicbl_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Sub ICB Location",
                    ),
                ),
                (
                    "tec_lec",
                    models.ForeignKey(
                        blank=True,
                        db_column="TECLEC",
                        db_constraint=False,
                        help_text="Local Learning and Skills Council (LLSC)/ Dept. of Children, Education, Lifelong Learning and Skills (DCELLS)/ Enterprise Region (ER)",
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="teclec_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Learning and Skills Council",
                    ),
                ),
                (
                    "travel_to_work_area",
                    models.ForeignKey(
                        blank=True,
                        db_column="TTWA",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ttwa_postcodes",
                        to="postcodes.geocode",
                        verbose_name="Travel to Work Area (TTWA)",
                    ),
                ),
                (
                    "ward",
                    models.ForeignKey(
                        blank=True,
                        db_column="WARD",
                        db_constraint=False,
                        limit_choices_to={
                            "ENTITYCD__code__in": ["E05", "N08", "S13", "W05"]
                        },
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="ward_postcodes",
                        to="postcodes.geocode",
                        verbose_name="(Electoral) ward/division",
                    ),
                ),
                (
                    "workplace_zone_2011",
                    models.ForeignKey(
                        blank=True,
                        db_column="WZ11",
                        db_constraint=False,
                        max_length=9,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="wz11_postcodes",
                        to="postcodes.geocode",
                        verbose_name="2011 Census Workplace Zone",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeoEntity",
            fields=[
                (
                    "code",
                    models.CharField(
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Entity code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        null=True,
                        verbose_name="Entity name",
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Entity abbreviation",
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Statistical Building Block",
                                "Statistical Building Block",
                            ),
                            ("Administrative", "Administrative"),
                            ("Administrative/Electoral", "Administrative Electoral"),
                            ("Electoral", "Electoral"),
                            ("Health", "Health"),
                            ("Other", "Other"),
                            ("Census", "Census"),
                            ("Experimental", "Experimental"),
                            ("Housing and Regeneration", "Housing And Regeneration"),
                            ("Transport", "Transport"),
                            ("Economic", "Economic"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Entity theme",
                    ),
                ),
                (
                    "coverage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("England", "England"),
                            ("England and Wales", "England And Wales"),
                            ("United Kingdom", "United Kingdom"),
                            ("Great Britain", "Great Britain"),
                            ("Channel Islands", "Channel Islands"),
                            ("Isle of Man", "Isle Of Man"),
                            ("Northern Ireland", "Northern Ireland"),
                            ("Scotland", "Scotland"),
                            ("Wales", "Wales"),
                        ],
                        max_length=32,
                        null=True,
                        verbose_name="Entity coverage",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Current", "Current"), ("Archived", "Archived")],
                        max_length=8,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "n_live",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Number of live instances"
                    ),
                ),
                (
                    "n_archived",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of archived instances",
                    ),
                ),
                (
                    "n_crossborder",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Number of cross-border instances",
                    ),
                ),
                (
                    "last_changed",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date of last instance change",
                    ),
                ),
                (
                    "first_code",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="Current code (first in range)",
                    ),
                ),
                (
                    "last_code",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="Current code (last in range)",
                    ),
                ),
                (
                    "reserved_code",
                    models.CharField(
                        blank=True,
                        max_length=9,
                        null=True,
                        verbose_name="Reserved code (for CHD use)",
                    ),
                ),
                (
                    "owner",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Entity owner abbreviation",
                    ),
                ),
                (
                    "date_introduced",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Date entity introduced on RGC",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Entity start date"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="entities",
                        to="postcodes.geoentitygroup",
                        verbose_name="Entity group",
                    ),
                ),
                (
                    "related_entities",
                    models.ManyToManyField(
                        blank=True,
                        to="postcodes.geoentity",
                        verbose_name="Related entity codes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Area type",
                "verbose_name_plural": "Area types",
            },
        ),
        migrations.AddField(
            model_name="geocode",
            name="ENTITYCD",
            field=models.ForeignKey(
                blank=True,
                max_length=3,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="geo_codes",
                to="postcodes.geoentity",
                verbose_name="Entity code",
            ),
        ),
    ]
